cmake_minimum_required(VERSION 2.8.7)
	
set( TESTS_QOBJECT_HEADERS
		""
	)

set( TESTS_HEADERS
		Tools/LocalizerMock.h
		Tools/SceneMockFactory.h
	)
	
set( TESTS_SOURCES
		Tools/LocalizerMock.cpp
		Tools/SceneMockFactory.cpp
	)
	
set( TESTS
		""
	)
	
set( TESTS_MISC_FILES
		UnitTests/configure.cmake
		ModuleTests/configure.cmake
	)
	
set( TESTS_RESOURCES
		""
	)

include( UnitTests/configure.cmake )
include( ModuleTests/configure.cmake )

############################################
# Compose test suite
############################################

QT4_WRAP_CPP( TESTS_QOBJECT_HEADERS_MOC ${TESTS_QOBJECT_HEADERS} )
QT4_ADD_RESOURCES( TESTS_RESOURCES_RCC ${TESTS_RESOURCES} )

set( TEST_SUITE_SRC_FILE	${CMAKE_CURRENT_BINARY_DIR}/${TARGET_NAME}-testsuite.cpp )

file( REMOVE	${TEST_SUITE_SRC_FILE} )
file( WRITE		${TEST_SUITE_SRC_FILE}	"// This file is automatically generated by CMake.\n\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"#include <QtTest/QtTest>\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"#include \"TestSuite.h\"\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"const std::string SOURCE_PATH = \"${CMAKE_CURRENT_SOURCE_DIR}\";\n" )

foreach( SOURCE_FILE ${TESTS_SOURCES} )
	file( APPEND	${TEST_SUITE_SRC_FILE}	"#include \"${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE_FILE}\"\n" )
endforeach( SOURCE_FILE )

foreach( QT_GENERATED_SOURCE_FILE ${TESTS_QOBJECT_HEADERS_MOC} ${TESTS_RESOURCES_RCC} )
	file( APPEND	${TEST_SUITE_SRC_FILE}	"#include \"${QT_GENERATED_SOURCE_FILE}\"\n" )
endforeach( QT_GENERATED_SOURCE_FILE )

file( APPEND	${TEST_SUITE_SRC_FILE}	"\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"#include <QApplication>\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"#include <Carna/base/CarnaException.h>\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"int main( int argc, char** argv )\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"{\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"    QApplication app( argc, argv );\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"    Carna::base::BreakForDebug::disable();\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"    bool success = true;\n" )
foreach( TEST_CASE ${TESTS} )
	file( APPEND	${TEST_SUITE_SRC_FILE}	"\n" )
	file( APPEND	${TEST_SUITE_SRC_FILE}	"    ${TEST_CASE} instance_of_${TEST_CASE};\n" )
	file( APPEND	${TEST_SUITE_SRC_FILE}	"    success &= ( QTest::qExec( &instance_of_${TEST_CASE}, argc, argv ) == 0 );\n" )
	file( APPEND	${TEST_SUITE_SRC_FILE}	"\n" )
endforeach( TEST_CASE )
file( APPEND	${TEST_SUITE_SRC_FILE}	"    return success ? 0 : -1;\n" )
file( APPEND	${TEST_SUITE_SRC_FILE}	"}\n" )
	
############################################
# Setup Visual Studio filters
############################################

SOURCE_GROUP( "Unit Tests"
	REGULAR_EXPRESSION \(.*test/UnitTests/.*\\.\)\(\(h\)|\(cpp\)|\(cmake\)\) )

SOURCE_GROUP( "Module Tests"
	REGULAR_EXPRESSION \(.*test/ModuleTests/.*\\.\)\(\(h\)|\(cpp\)|\(cmake\)\) )

SOURCE_GROUP( "Miscellaneous"
	REGULAR_EXPRESSION .*\\.\(\(in\)|\(txt\)|\(qrc\)\) )

SOURCE_GROUP( "Miscellaneous\\Generated Files"
	FILES "${TEST_SUITE_SRC_FILE}" ${TESTS_QOBJECT_HEADERS_MOC} ${TESTS_RESOURCES_RCC} )

SOURCE_GROUP( "Miscellaneous\\Tools"
	REGULAR_EXPRESSION \(.*test/Tools/.*\\.\)\(\(h\)|\(cpp\)\) )

############################################
# Find dependencies and add them to the linker
############################################

# Qt

set( QT_USE_QTTEST		TRUE )
set( QT_USE_QTOPENGL	TRUE )
find_package( Qt4 REQUIRED )
include( ${QT_USE_FILE} )
add_definitions( ${QT_DEFINITIONS} )

# GLEW

include( $ENV{MEDITEC_LIBS}/GLEW/1.7.0/configure.cmake )

# Carna

include( $ENV{MEDITEC_LIBS}/Carna/2.3.0/configure.cmake )

# CRA

include_directories( ${CMAKE_SOURCE_DIR}/include )
link_directories( ${CMAKE_BINARY_DIR}/bin )

# Project

remove_definitions( -DCRA_LIB )

include_directories( ${CMAKE_PROJECT_DIR}Tools )

set_source_files_properties( ${TESTS_QOBJECT_HEADERS_MOC} ${TESTS_SOURCES} ${TESTS_MISC_FILES} ${TESTS_RESOURCES_RCC}
	PROPERTIES
	HEADER_FILE_ONLY TRUE )

add_executable( ${TARGET_NAME}-testsuite
			Tools/TestSuite.h
			${TEST_SUITE_SRC_FILE}
			${TESTS_HEADERS}
			${TESTS_QOBJECT_HEADERS}
			${TESTS_QOBJECT_HEADERS_MOC}
			${TESTS_SOURCES}
			${TESTS_MISC_FILES}
			${TESTS_RESOURCES_RCC}
		)
		
target_link_libraries( ${TARGET_NAME}-testsuite
			opengl32
			glu32
			${GLEW_LIBLIST}
			${QT_LIBRARIES}
			${TRTK_LIBLIST}
			${CARNA_LIBLIST}
			optimized	${TARGET_NAME}
			debug		${TARGET_NAME}${CMAKE_DEBUG_POSTFIX}
		)

############################################
# Run the tests
############################################

get_property( TEST_SUITE_EXECUTABLE TARGET ${TARGET_NAME}-testsuite PROPERTY LOCATION )
add_custom_target( RUN_TESTSUITE
			ALL
			${TEST_SUITE_EXECUTABLE}
			DEPENDS ${TARGET_NAME} ${TARGET_NAME}-testsuite
			COMMENT "Running test suite..."
		)